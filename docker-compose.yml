version: '3.9'
services:
  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - icfpc
    environment:
      POSTGRES_PASSWORD: 'ghjdthrf'
    volumes:
      - './init.sql:/docker-entrypoint-initdb.d/init.sql'
      - 'postgres:/var/lib/postgresql/data'

  pgadmin:
    image: dpage/pgadmin4:latest
    depends_on:
      - postgres
    restart: always
    networks:
      - icfpc
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: 'user@test.com'
      PGADMIN_DEFAULT_PASSWORD: 'ghjdthrf'
    volumes:
      #      - 'C:/docker/servers.json:/pgadmin4/servers.json'
      - 'pgadmin:/var/lib/pgadmin'
#  postgres:
  #    image: postgres
  #    restart: always
  #    ports:
  #      - "5454:5432"
  #    environment:
  #      POSTGRES_PASSWORD: ghjdthrf
  #    volumes:
  #      - './init.sql:/docker-entrypoint-initdb.d/init.sql'
  #      - 'postgres:/var/lib/postgresql/data'

  #  teamcity:
  #    image: jetbrains/teamcity-server
  #    depends_on:
  #      - postgres
  #    restart: always
  #    ports:
  #      - 8111:8111
  #    volumes:
  #      - 'teamcity:/data/teamcity_server/datadir'

  #  teamcity-agent:
  #    image: jetbrains/teamcity-agent
  #    restart: always
  #    environment:
  #      SERVER_URL: 'http://<teamcity_server>:8111'

  server:
#    image: dev643/icfpc2024
#    build: .
    image: dev643/icfpc2023:latest
#    restart: always
    depends_on:
      - postgres
    ports:
      - 8080:8080
    networks:
      - icfpc
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/icfpc
      - spring.datasource.username=icfpc
      - spring.datasource.password=icfpc
      - token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiI2NGE3MDcxZGNlYTQ5YjFjNDkxYmJjYmEiLCJpYXQiOjE2ODg2NzA0ODEsImV4cCI6MTY5ODY3MDQ4MX0.-CIHI_BLZVk5-PzUhOzY73A_pZI2ZOkugUISc18BdK0
      - service.read=false
      - service.calc=false
      - service.upload=false

#  icfpc-read:
#    image: dev643/icfpc2023:latest
#    restart: always
#    ports:
#      - 8088:8080
#    environment:
#      - spring.datasource.url=jdbc:postgresql://c-c9qkihub5cu0l6cj6f4p.rw.mdb.yandexcloud.net:6432/db_icfpc
#      - spring.datasource.password=MerX6^ryu3)p#y_
#      - spring.datasource.username=icfpc
#      - token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiI2NGE3MDcxZGNlYTQ5YjFjNDkxYmJjYmEiLCJpYXQiOjE2ODg2NzA0ODEsImV4cCI6MTY5ODY3MDQ4MX0.-CIHI_BLZVk5-PzUhOzY73A_pZI2ZOkugUISc18BdK0
#      - service.read=true
#      - service.calc=false
#      - service.upload=false

  kotlin_notebook:
    container_name: kotlin_notebook
    image: ghcr.io/knonm/kotlin-notebook:latest
    depends_on:
      - server
    ports:
      - "9999:8888"
    networks:
      - icfpc
    environment:
      JUPYTER_TOKEN: easy
      JUPYTER_ENABLE_LAB: yes
      CHOWN_HOME: yes
    volumes:
      - './workspace:/home/jovyan/workspace'

networks:
  icfpc:
    driver: bridge

volumes:
  postgres:
  pgadmin:
